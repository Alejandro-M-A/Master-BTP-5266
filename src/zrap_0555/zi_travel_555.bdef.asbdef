managed;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for ZI_travel_555 alias Travel
implementation in class zbp_i_travel_55 unique
persistent table ztb_travel_m_555
lock master
authorization master ( instance )
etag master last_changed_at
{
  //administrative fields: read only
  field ( readonly ) last_changed_at, last_changed_by, created_at, created_by;
  // Mandatory fields wich are required to create a travel
  field ( mandatory ) agency_id, overall_status, booking_fee, currency_code;
  // Dynamic field control
  field ( features : instance ) travel_id;

  create;
  update;
  delete;

  validation validateCustomer on save { field customer_id; }
  validation validationDates on save { field begin_date, end_date; }
  validation validateStatus on save { field overall_status; }

  association _Booking { create; }
}

define behavior for ZI_BOOKING_555 alias booking
implementation in class zbp_i_booking_55 unique
persistent table ztb_bookng_m_555
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field ( readonly ) travel_id;
  field ( mandatory ) carrier_id, connection_id, flight_date, booking_status;
  update;
  delete;

  validation validateStatus on save { field booking_status; }
  association _Travel;
  association _BookSupplement { create; }
}

define behavior for ZI_Booksuppl_M_555 alias Supplement
implementation in class zbp_i_booksuppl_55
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field ( readonly ) travel_id, booking_id;
  field ( mandatory ) supplement_id, price;
  update;
  delete;
  association _Travel;
  association _Booking;
}